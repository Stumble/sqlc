{{define "dbCodeTemplateWPgx"}}

type WGConn interface {
	WQuery(
		ctx context.Context, name string, unprepared string, args ...interface{}) (pgx.Rows, error)
	WQueryRow(
		ctx context.Context, name string, unprepared string, args ...interface{}) pgx.Row
	WExec(
		ctx context.Context, name string, unprepared string, args ...interface{}) (pgconn.CommandTag, error)
	PostExec(f wpgx.PostExecFunc) error
{{- if .UsesCopyFrom }}
	CopyFrom(ctx context.Context, tableName pgx.Identifier, columnNames []string, rowSrc pgx.CopyFromSource) (int64, error)
{{- end }}
{{- if .UsesBatch }}
	SendBatch(context.Context, *pgx.Batch) pgx.BatchResults
{{- end }}
}

{{ if .EmitMethodsWithDBArgument}}
func New() *Queries {
	return &Queries{}
{{- else -}}
func New(db WGConn) *Queries {
	return &Queries{db: db}
{{- end}}
}

type Queries struct {
    {{if not .EmitMethodsWithDBArgument}}
	db WGConn
    {{end}}
}

{{if not .EmitMethodsWithDBArgument}}
func (q *Queries) WithTx(tx *wpgx.WTx) *Queries {
	return &Queries{
		db: tx,
	}
}
{{end}}
{{end}}
